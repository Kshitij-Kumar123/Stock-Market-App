{"version":3,"sources":["components/graph.jsx","components/data-card.jsx","components/news.jsx","components/startpage.jsx","App.js","serviceWorker.js","index.js"],"names":["Graph","xValues","yValues","gradient","document","createElement","getContext","createLinearGradient","addColorStop","data","labels","reverse","datasets","backgroundColor","borderWidth","reponsive","options","scales","xAxes","gridLines","display","ticks","title","legend","width","height","DataCard","props","symbol","Object","keys","length","high","low","close","dataObjectKey","value","filteredObjects","symbolEntries","entries","slice","key","push","currentClose","previousClose","differencePercentage","Math","round","console","log","className","style","margin","color","toUpperCase","href","onClick","onToday","onFiveDays","onYearly","onFiveYears","News","news","map","indexOf","src","urlToImage","alt","url","source","name","StartPage","textAlign","paddingTop","API","App","useState","setSymbol","functionKeyword","setFunctionKeyword","query","setQuery","setNews","queryForData","setQueryForData","indexOfFirst","setIndexOfFirst","indexOfLast","setIndexOfLast","useEffect","fetch","then","res","json","result","undefined","status","currentPosts","articles","type","marginTop","placeholder","onChange","e","target","onKeyPress","handleSearch","nextState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d30afadc.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nexport default function Graph({ xValues, yValues }) {\r\n        \r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext(\"2d\");\r\n    var gradient = ctx.createLinearGradient(0, 0, 0, 400);\r\n    gradient.addColorStop(0, 'rgba(9, 82, 237, 1)');   \r\n    gradient.addColorStop(1, 'rgba(81, 220, 224, 0)'); \r\n    \r\n    return (\r\n        <div>\r\n            <article>\r\n                <Line\r\n                    data={ {\r\n                        labels: xValues.reverse(),\r\n                        datasets: [\r\n                            {\r\n                                data: yValues.reverse(),\r\n                                backgroundColor: gradient,\r\n                                borderWidth: 2,\r\n                                reponsive: true\r\n                            }\r\n                        ]\r\n                    } }\r\n                    options={{\r\n                        scales: {\r\n                            xAxes: [{\r\n                                gridLines: {\r\n                                    display: false\r\n                                },\r\n                                ticks: {\r\n                                    display: false\r\n                                }\r\n                            }],\r\n                        },\r\n                        title:{\r\n                            display: false\r\n                        },\r\n                        legend:{\r\n                            display: false\r\n                        }\r\n                    }}\r\n                    width={10}\r\n                    height={8}\r\n                />\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, useState } from 'react';\r\nimport Graph from '././graph';\r\n\r\nfunction DataCard (props) {\r\n    var xValues = [];\r\n    var yValues = [];\r\n    var symbol = props.symbol;\r\n\r\n    //Object.keys(symbol[dataObjectKey]).length >= 2\r\n    if (Object.keys(symbol).length == 2) {\r\n        var dataObjectKey = Object.keys(symbol)[1];\r\n        //console.log(dataObjectKey);\r\n        var open, high, low, close, volume; \r\n        var value = symbol[dataObjectKey][Object.keys(symbol[dataObjectKey])[0]];\r\n        \r\n        open = value[\"1. open\"]; \r\n        high = value[\"2. high\"];\r\n        low = value[\"3. low\"]; \r\n        close = value[\"4. close\"];\r\n        volume = value[\"5. volume\"];\r\n\r\n        //xValues = Object.keys(symbol[dataObjectKey]);\r\n        var filteredObjects = [];\r\n        var symbolEntries = Object.entries(symbol[dataObjectKey]);\r\n    \r\n        switch(dataObjectKey) {\r\n            case \"Time Series (60min)\":\r\n                filteredObjects = symbolEntries.slice(0, 60);\r\n                break;\r\n            case \"Weekly Time Series\":\r\n                filteredObjects = symbolEntries.slice(0, 52);\r\n                break;\r\n            case \"Monthly Time Series\":\r\n                filteredObjects = symbolEntries.slice(0, 60);\r\n                break;\r\n            case \"Time Series (5min)\":\r\n                filteredObjects = symbolEntries;\r\n                break;\r\n            default:\r\n                filteredObjects = [];\r\n        }\r\n\r\n        //console.log(\"filtered \", dataObjectKey, \": \", filteredObjects);\r\n\r\n        for (let key in filteredObjects) {\r\n            xValues.push(filteredObjects[`${key}`][0]);\r\n            yValues.push(filteredObjects[`${key}`][1][\"4. close\"]);\r\n        }    \r\n\r\n        //console.log(\"x val: \", xValues);\r\n        //console.log(\"y val: \", yValues);\r\n\r\n        var currentClose = yValues[yValues.length-1]; \r\n        var previousClose = yValues[yValues.length-2]; \r\n        //console.log(previousClose, \"    \" + currentClose)\r\n\r\n        var differencePercentage = (Math.round((previousClose-currentClose)/(previousClose)*100*10000))/10000; \r\n        console.log(differencePercentage);\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <div className=\"col-xs-12 col-sm-10 col-md-8 col-lg-7\" style={{margin: \"0 auto\"}}>\r\n            <div className=\"shadow p-3 bg-white rounded\"> \r\n                <div className=\"row p-3\" >\r\n                    <h4><span style={{color: \"gray\"}}> Market Summary: </span>{symbol[\"Meta Data\"][\"2. Symbol\"].toUpperCase()}</h4>\r\n                </div>\r\n                <div className=\"row p-3\">\r\n                    <span><span className=\"display-4\">{close}</span>&nbsp;&nbsp;{differencePercentage}</span>\r\n                </div>\r\n                <div className=\"row p-3\">\r\n                    <span style={{color: \"gray\"}}>High: &nbsp;</span> {high} &nbsp;&nbsp;\r\n                    <span style={{color: \"gray\"}}>Low:  &nbsp;</span> {low} &nbsp;&nbsp;\r\n                </div>\r\n                <div className=\"row\">\r\n                    <ul className=\"nav\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" href=\"#\" onClick={props.onToday}>Today</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" href=\"#\" onClick={props.onFiveDays}>5 Days</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" href=\"#\" onClick={props.onYearly}>Yearly</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" href=\"#\" onClick={props.onFiveYears}>5 Years</a>\r\n                        </li>\r\n                    </ul>\r\n                </div> \r\n            </div>\r\n        </div>\r\n        <div className=\"col-xs-12 col-sm-10 col-md-8 col-lg-7 pt-1\" style={{margin: \"0 auto\"}}>\r\n            <div className=\"card h-100\">\r\n                <div className=\"card-body\">\r\n                    <Graph xValues={xValues} yValues={yValues} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default DataCard;\r\n","import React, {} from 'react'\r\n\r\nfunction News(props) {\r\n    var news = props.news;\r\n    \r\n    return (\r\n    <div className=\"card-group col-xs-12 col-sm-10 col-md-8 col-lg-7\" style={{margin: \"0 auto\"}}>\r\n    {news.map(data => (\r\n        <div className=\"card\" key={news.indexOf(data)}>\r\n            <img className=\"card-img-top\" src={data.urlToImage} alt=\"headline\"></img>\r\n            <div className=\"card-body\">\r\n                <a href={data.url}><h6 className=\"card-title\">{data.title}</h6></a>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <small className=\"text-muted\">{data.source.name}</small>\r\n            </div>\r\n        </div>\r\n    ))}\r\n    </div>\r\n    )\r\n}\r\nexport default News; ","import React from 'react'\r\n\r\nexport default function StartPage() {\r\n    return (\r\n        <div className=\"container\" style={{display: \"inline-block\", textAlign: \"center\"}}>\r\n            <h3 className=\"display-3\" style={{paddingTop: \"20%\"}}>Stock Market App</h3>\r\n            <h5 className=\"display-5\"> Made using ReactJS, ChartJS and information from Alpha Vantage</h5>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\n//import Graph from './components/graph';\nimport DataCard from \"./components/data-card\";\nimport News from \"./components/news\";\nimport Financial from './components/financial-data';\nimport StartPage from './components/startpage';\n//import { useSpring, animated } from 'react-spring';\nimport './App.css';\n\n\nconst API = {\n  key: \"73151823131744a78d7da16875ca87e3\", \n  base: \"https://www.alphavantage.co/query?\" \n}\n\nconst news_api = \"73151823131744a78d7da16875ca87e3\";\n\nfunction App() {\n  const [symbol, setSymbol] = useState({}); \n  const [functionKeyword, setFunctionKeyword] = useState('');\n  const [query, setQuery] = useState(''); \n  const [news, setNews] = useState({});\n  // to be removed\n  const [financialData, setFinancialData] = useState({});\n  const [queryForData, setQueryForData] = useState('');\n  // keep this tho\n  const [indexOfFirst, setIndexOfFirst] = useState(0); \n  const [indexOfLast, setIndexOfLast] = useState(3);\n\n  useEffect(() => {\n    /// useRef reccommended\n    var errorMessage, previousSymbolState;\n    previousSymbolState = symbol;\n\n    fetch(`${API.base}function=${functionKeyword}&apikey=${API.key}`)\n    .then(res => res.json())\n    .then(result => {\n      console.log(result);\n      if (Object.keys(result).length === 1) {\n        errorMessage = \"API calls exceeded\";\n        console.log(errorMessage);\n      } \n      console.log(result);\n        setSymbol(result);\n    })\n  \n  }, [functionKeyword])\n\n  useEffect(() => {\n    \n    fetch(`http://newsapi.org/v2/everything?q=${query}&apiKey=${news_api}`)\n    .then(res => res.json())\n    .then(result => {\n      setNews(result); //JSON.stringify(result))\n      console.log(\"news: \", result);\n    }) \n\n    /*\n    fetch(`${API.base}function=OVERVIEW&symbol=${query}&apikey=${API.key}`)\n    .then(res => res.json())\n    .then(result => {\n      console.log(\"financial data: \", result);\n      setFinancialData(result);\n    })\n    */\n  }, [queryForData])\n\n  function handleSearch(e) {\n    if (e.key === \"Enter\") {\n      setFunctionKeyword(`TIME_SERIES_INTRADAY&interval=5min&symbol=${query}`);\n      setQueryForData(query);\n    }\n  }\n  if (news != undefined && news.status === \"ok\") {\n    //var indexOfLast = currentPage * postsPerPage;\n    //var indexOfFirst = indexOfLast - postsPerPage;\n    var currentPosts = news.articles.slice(indexOfFirst, indexOfLast);\n  }\n\n  function handleNext() {\n    let prevState = indexOfFirst; \n    let nextState = indexOfLast;\n    setIndexOfFirst(prevState+3);\n    setIndexOfLast(nextState+3);\n  }\n\n  function handlePrevious() {\n    let prevState = indexOfFirst; \n    let nextState = indexOfLast;\n    setIndexOfFirst(prevState-3);\n    setIndexOfLast(nextState-3);\n  }\n\n  //const fadeIn = useSpring({opacity: 1, from: {opacity: 0}})\n\n  return (   \n    <div className=\"container\">\n      <div className=\"row\">\n        <input \n          type=\"text\"\n          style={{margin: \"0 auto\", marginTop:\"5%\" }}\n          className=\"col-xs-9 col-sm-7 col-md-5 col-lg-3 form-control\"\n          placeholder=\"Enter Symbol\"\n          onChange={(e) => setQuery(e.target.value)}\n          onKeyPress={(e) => handleSearch(e)}\n        />\n      </div>\n      \n        {Object.keys(symbol).length > 1 ? \n        <>\n          <div className=\"row justify-content-md-center\"> \n            <DataCard symbol={symbol} \n              onToday={() => setFunctionKeyword(`TIME_SERIES_INTRADAY&interval=5min&symbol=${query}`)}\n              onFiveDays={() => setFunctionKeyword(`TIME_SERIES_INTRADAY&interval=60min&symbol=${query}`)}\n              onYearly={() => setFunctionKeyword(`TIME_SERIES_WEEKLY&symbol=${query}`)}\n              onFiveYears={() => setFunctionKeyword(`TIME_SERIES_MONTHLY&symbol=${query}`)}\n            />\n          </div> \n          \n          {(news !== undefined && news.status === \"ok\") ?\n            (<div>\n              <div className=\"row\">\n                <News news={currentPosts} />\n              </div>\n              <div className=\"row\" style={{margin:\"0 auto\"}}>\n                <div className=\"card-group col-xs-12 col-sm-10 col-md-8 col-lg-6\" style={{margin: \"0 auto\"}}>\n                  {indexOfFirst !== 0 && <button className=\"btn btn-primary\" onClick={handlePrevious} style={{textAlign:\"left\"}}>Previous</button>}\n                  <button className=\"btn btn-primary\" onClick={handleNext} style={{textAlign: \"right\"}}>Next</button>\n                </div>\n              </div>\n            </div>\n            ) : ('')\n          }\n\n        </>\n        : <StartPage />}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Bootstrap from 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}